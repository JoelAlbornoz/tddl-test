{"version":3,"sources":["components/Chart/chartComponent.jsx","components/Chart/chartContainer.jsx","components/Chart/index.js","components/NewUserModal/newUserModalComponent.jsx","components/NewUserModal/index.js","components/LeftCardContent/leftCardComponent.jsx","components/LeftCardContent/index.js","components/rightCardComponent/rightCardComponent.jsx","components/rightCardComponent/index.js","components/NoMoreFundsModal/noMoreFundsModalComponent.jsx","components/NoMoreFundsModal/index.js","App.js","reportWebVitals.js","index.js"],"names":["ChartComponent","props","useState","options","chart","id","yaxis","show","labels","xaxis","categories","series","name","data","state","setState","useEffect","toolbar","colors","formatter","value","val","style","fontSize","fontFamily","fontWeight","cssClass","type","axisBorder","axisTicks","width","chartContainer","Chart","position","top","left","transform","bgcolor","border","boxShadow","p","Modal","newName","setNewName","open","Box","sx","Typography","variant","component","mt","onChange","e","target","Button","onClick","handleUserData","balance","bet","historial","showUserModal","bestBet","leftCardComponent","LeftCardComponent","Card","className","CardContent","currentMessage","countdown","gameRunning","userData","map","item","index","color","won","multiplicator","earnings","RightCardComponent","rightCard","usersList","setUsersList","fetch","then","res","json","firstThree","user","username","NoMoreFundsModalComponent","onClose","App","localUserData","JSON","parse","localStorage","getItem","showNoMoreFundsModal","setShowNoMoreFundsModal","betting","setUserData","crashChance","appState","setAppState","setData","setCategories","handleClock","roll","Math","floor","random","console","log","length","slice","round","setItem","stringify","interval","setInterval","offGameInterval","clearInterval","NoMoreFundsModal","marginLeft","marginRight","backgroundColor","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d32c9a2.chunk.js","sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nfunction ChartComponent(props) {\r\n    const [state, setState] = useState(\r\n        {\r\n            options: {\r\n              chart: {\r\n                id: \"main-chart\"\r\n              },\r\n              yaxis: {\r\n                show:true,\r\n                labels: {\r\n                  show:true\r\n                }\r\n              },\r\n              xaxis: {\r\n                show:true,\r\n                categories: props.categories,\r\n                labels: {\r\n                  show:true\r\n                }\r\n              }\r\n            },\r\n            series: [\r\n              {\r\n                name: \"Crash Risk\",\r\n                data: props.data\r\n              },\r\n            ]\r\n          }\r\n    )\r\n    const roundOneHValue = (val) => {\r\n      if( val > 100){\r\n        return \"%\" +100\r\n      } else{\r\n        return \"%\"+val\r\n      }\r\n    }\r\n    useEffect(() => {\r\n        setState(\r\n          {\r\n            options: {\r\n              chart: {\r\n                id: \"main-chart\",\r\n                toolbar: {\r\n                  show: false,\r\n                }\r\n              },\r\n              colors: [\"#ff5588\"],\r\n              yaxis: {\r\n                show:true,\r\n                labels: {\r\n                  formatter: (value) => roundOneHValue(value),\r\n                  style: {\r\n                    fontSize: \"16px\",\r\n                    colors: \"#828282\",\r\n                    fontFamily: \"Calibri Regular\",\r\n                    fontWeight: 400,\r\n                    cssClass: \"apexcharts-xaxis-label\"\r\n                  }\r\n                }\r\n              },\r\n              xaxis: {\r\n                categories: props.categories,\r\n                series: [\r\n                  {\r\n                    name: \"Crash Risk\",\r\n                    data: props.categories\r\n                  },\r\n                ],\r\n                type: \"category\",\r\n                labels: {\r\n                  formatter: (value) => \"x \"+value,\r\n                  style: {\r\n                    fontSize: \"16px\",\r\n                    colors: \"#828282\",\r\n                    fontFamily: \"Calibri Regular\",\r\n                    fontWeight: 400,\r\n                    cssClass: \"apexcharts-xaxis-label\"\r\n                  }\r\n                },\r\n                axisBorder: {\r\n                  show: false\r\n                },\r\n                axisTicks: {\r\n                  show: false\r\n                }\r\n              },\r\n            },\r\n            series: [\r\n              {\r\n                name: \"Crash Risk\",\r\n                data: props.data\r\n              },\r\n            ]\r\n          }\r\n        )\r\n    }, [props])\r\n\r\n    return (\r\n        <Chart\r\n        options={state.options}\r\n        series={state.series}\r\n        type=\"line\"\r\n        width=\"520\"\r\n      />\r\n    )\r\n}\r\n\r\n\r\nexport default ChartComponent\r\n\r\n","import ChartComponent from \"./chartComponent\";\r\nimport React from 'react'\r\n\r\nfunction chartContainer(props) {\r\n    return (\r\n        <div>\r\n            <ChartComponent categories={props.categories} data={props.data}></ChartComponent>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default chartContainer\r\n","import Chart from './chartContainer'\r\n\r\nexport default Chart","import React, {useState} from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function BasicModal(props) {\r\n  const [newName, setNewName] = useState('')\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={props.show}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Ingrese el nombre del nuevo usuario\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            <input type=\"text\" value={newName} onChange={(e)=>{setNewName(e.target.value)}}/>\r\n          </Typography>\r\n          <Button onClick={()=>props.handleUserData(\r\n              {\r\n                balance:1000,\r\n                bet:0,\r\n                historial:[],\r\n                name:newName,\r\n                showUserModal:false,\r\n                bestBet:0,\r\n              }\r\n          )}>Confirmar</Button>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import Modal from './newUserModalComponent';\r\nexport default Modal;","import React from 'react'\r\nimport { Card, CardContent } from '@mui/material';\r\n\r\n\r\nfunction leftCardComponent(props) {\r\n    return (\r\n        <Card className='card__container__card'>\r\n          <CardContent>\r\n            <h2>{props.currentMessage}</h2>\r\n            {(props.countdown > 0 && !props.gameRunning) && <h2>Game starting in: {props.countdown}</h2>}\r\n            <hr/>\r\n            <h4>{props.userData.name}</h4>\r\n            <h4>Balance : ${props.userData.balance}</h4>\r\n\r\n            <h4>Bet : ${props.userData.bet}</h4>\r\n\r\n            <h4>Bet history: </h4>\r\n            {props.userData.historial.map((item, index) => {\r\n              return <div key={'hstRslt' + index}><b style={{color: item.won ? 'green' : 'red'}}>x{item.multiplicator} ___ ${item.earnings}</b>\r\n              <br/></div>\r\n            })}\r\n            <h4>Best bet:  ${props.userData.bestBet}</h4>\r\n          </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default leftCardComponent\r\n","import LeftCardComponent from './leftCardComponent';\r\n\r\nexport default LeftCardComponent;","import React, {useState,useEffect} from 'react'\r\nimport { Card, CardContent } from '@mui/material';\r\n\r\n\r\nfunction RightCardComponent(props) {\r\n    const [usersList, setUsersList] = useState([])\r\n\r\n    useEffect(() => {\r\n        const data = fetch('https://jsonplaceholder.typicode.com/users')\r\n        const json = data.then(res => res.json())\r\n        json.then(res => setUsersList(res))\r\n    })\r\n\r\n    const firstThree = (index) =>{\r\n        switch(index){\r\n            case 0:\r\n                return 'yellow'\r\n            case 1:\r\n                return 'gray'\r\n            case 2:\r\n                return 'brown'\r\n            default:\r\n                return 'black'\r\n    }\r\n}\r\n\r\n    return (\r\n        <Card className='card__container__card'>\r\n          <CardContent>\r\n            <h2>Top players</h2>\r\n            {usersList.map((user, index) => \r\n                <div key={'usr-' + user.username} style={{\r\n                    color: firstThree(index)\r\n                    }\r\n                }>{user.username}</div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default RightCardComponent\r\n","import rightCard from \"./rightCardComponent\";\r\n\r\nexport default rightCard;\r\n","import React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function BasicModal(props) {\r\n\r\n  const recharge = () => {\r\n    props.handleUserData(\r\n        {\r\n          ...props.userData,\r\n          balance: props.userData.balance + 1000\r\n        }\r\n    )\r\n    props.onClose()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={props.show}\r\n        onClose={props.onClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            No tienes mas fondos!\r\n          </Typography>\r\n          <Button onClick={()=> recharge()}>Recargar 1000</Button>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}","import NoMoreFundsModalComponent from \"./noMoreFundsModalComponent\";\r\nexport default NoMoreFundsModalComponent;\r\n","import \"./App.css\";\nimport Chart from \"./components/Chart\";\nimport Modal from \"./components/NewUserModal\";\nimport LeftCardComponent from \"./components/LeftCardContent\";\nimport { Button, Card, CardContent } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport RightCardComponent from \"./components/rightCardComponent\";\nimport NoMoreFundsModalComponent from \"./components/NoMoreFundsModal\";\n\nfunction App() {\n  //Declaramos el state\n  const localUserData = JSON.parse(localStorage.getItem(\"userData\"));\n  const [showNoMoreFundsModal, setShowNoMoreFundsModal] = useState(false);\n  const [userData, setUserData] = useState(\n    localUserData\n      ? localUserData\n      : {\n          betting: false,\n          balance: 0,\n          bet: 0,\n          bestBet: 0,\n          historial: [],\n          name: \"\",\n          showUserModal: true,\n        }\n  );\n  const [appState, setAppState] = useState({\n    gameRunning: false,\n    countdown: 5,\n    currentMessage: \"Place your bets\",\n    crashChance: 5,\n  });\n  const [data, setData] = useState([0, 5]);\n  const [categories, setCategories] = useState([0, 1.0]);\n\n  //Fin de la declaración del state\n  //Funcion para guardar los datos del usuario en el local storage\n\n  const saveUserData = () => {\n    localStorage.setItem(\"userData\", JSON.stringify(userData));\n  };\n\n  //Bucle principal de la aplicación\n  const handleClock = () => {\n    const roll = Math.floor(Math.random() * (100 - 1 + 1) + 1);\n    console.log(\"roll: \" + roll + \"crash chance: \" + appState.crashChance);\n    if (roll <= appState.crashChance) {\n      setAppState({\n        ...appState,\n        crashChance: 5,\n        gameRunning: false,\n        currentMessage: \"Crashed, place your bets\",\n      });\n      setCategories([0, 1.0]);\n      setData([0, 5]);\n      if (userData.betting) {\n        setUserData({\n          ...userData,\n          historial: [\n            ...userData.historial,\n            {\n              multiplicator: categories[categories.length - 1],\n              won: false,\n              earnings: -userData.bet,\n            },\n          ].slice(-5),\n          bet: 0,\n          betting: false,\n        });\n      }\n    } else {\n      setData([...data, Math.round(data[data.length - 1] * 1.42 * 100) / 100]);\n      setCategories([\n        ...categories,\n        Math.round(categories[categories.length - 1] * 1.2 * 100) / 100,\n      ]);\n      setAppState({\n        ...appState,\n        crashChance: data[data.length - 1] * 1.42,\n      });\n    }\n    saveUserData();\n  };\n  //Fin del bucle principal\n\n  //Función que se ejecuta al iniciar la aplicación\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (appState.gameRunning) {\n        handleClock();\n      }\n    }, 2000);\n    const offGameInterval = setInterval(() => {\n      if (!appState.gameRunning && userData.name !== \"\") {\n        setAppState({ ...appState, countdown: appState.countdown - 1 });\n        if (appState.countdown === 0) {\n          setAppState({\n            ...appState,\n            countdown: 5,\n            gameRunning: true,\n            currentMessage: \"Game Running!\",\n          });\n        }\n      }\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n      clearInterval(offGameInterval);\n    };\n  });\n  //Fin de la función que se ejecuta al iniciar la aplicación\n\n  const placeBet = (bet) => {\n    if (userData.balance > 0) {\n      setUserData({\n        ...userData,\n        bet: bet + userData.bet,\n        balance: userData.balance - bet,\n        betting: true,\n      });\n    } else {\n      setShowNoMoreFundsModal(true);\n    }\n  };\n\n  const retireBet = () => {\n    if (userData.betting) {\n      setUserData({\n        ...userData,\n        betting: false,\n        bet: 0,\n        balance:\n          userData.balance + userData.bet * categories[categories.length - 1],\n        bestBet:\n          userData.bet * categories[categories.length - 1] > userData.bestBet\n            ? userData.bet * categories[categories.length - 1]\n            : userData.bestBet,\n        historial: [\n          ...userData.historial,\n          {\n            multiplicator: categories[categories.length - 1],\n            won: true,\n            earnings: userData.bet * categories[categories.length - 1],\n          },\n        ].slice(-5),\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <b>Casino Crash Game</b>\n      </div>\n      <div className=\"card__container\">\n        <LeftCardComponent\n          gameRunning={appState.gameRunning}\n          countdown={appState.countdown}\n          currentMessage={appState.currentMessage}\n          className=\"card__container__card\"\n          userData={userData}\n        />\n        <Card className=\"card__container__card__middle\">\n          <CardContent>\n            <Chart categories={categories} data={data} />\n          </CardContent>\n        </Card>\n        <RightCardComponent></RightCardComponent>\n        <Modal handleUserData={setUserData} show={userData.showUserModal} />\n        <NoMoreFundsModalComponent\n          show={showNoMoreFundsModal}\n          handleUserData={setUserData}\n          userData={userData}\n          onClose={() => setShowNoMoreFundsModal(false)}\n        />\n      </div>\n      {appState.gameRunning ? (\n        <Button\n          style={{\n            width: \"30%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            backgroundColor: \"#3d4047\",\n          }}\n          onClick={() => {\n            retireBet();\n          }}\n        >\n          Retire\n        </Button>\n      ) : (\n        <Button\n          style={{\n            width: \"30%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            backgroundColor: \"#3d4047\",\n          }}\n          onClick={() => {\n            placeBet(100);\n          }}\n        >\n          Place Bet 100\n        </Button>\n      )}\n      <div>\n        <footer>\n          Elias Joel Albornoz © 2021\n          <a href=\"https://www.linkedin.com/in/joel-albornoz/\">Linkedin</a>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}